---
- name: Set up Nginx and PostgreSQL on Ubuntu 22
  hosts: all
  become: true

  vars:
    postgres_listen_address: "{{ postgres_listen_address }}"
    docker_subnet: "{{ docker_subnet }}"

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
        when: nginx_test.rc == 0

    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted

  tasks:
    # Update and upgrade the system
    - name: Update apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Ensure Python is installed
      become: yes
      apt:
        name: python3
        state: present
    # Install Nginx
    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Ensure Nginx is enabled and running
      service:
        name: nginx
        state: started
        enabled: yes
    # Install PostgreSQL
    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present

    - name: Ensure PostgreSQL is enabled and running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Set listen addresses
      ansible.builtin.lineinfile:
        path: /etc/postgresql/14/main/postgresql.conf # Adjust version if needed
        regexp: "^#?listen_addresses\\s*="
        line: "listen_addresses = 'localhost,{{ postgres_listen_address }}'"
        backup: yes
      notify: Restart PostgreSQL

    # Update pg_hba.conf
    - name: Allow Docker subnet access
      ansible.builtin.lineinfile:
        path: /etc/postgresql/14/main/pg_hba.conf
        line: "host    all             all             {{ docker_subnet }}           md5"
        insertafter: EOF
      notify: Restart PostgreSQL

    - name: Allow Nginx Full profile through UFW
      ufw:
        rule: allow
        name: "Nginx Full"

    - name: Allow PostgreSQL through UFW
      ufw:
        rule: allow
        port: 5432
        proto: tcp

    - name: Create directory for static files
      file:
        path: /var/www/static
        state: directory
        owner: www-data
        group: www-data
        mode: "0755"

    - name: Create directory for media files
      file:
        path: /var/www/media
        state: directory
        owner: www-data
        group: www-data
        mode: "0755"
    - name: Restore default nginx.conf
      copy:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: "0644"

    - name: Copy Nginx site config
      template:
        src: templates/sites-available/app.conf.j2
        dest: /etc/nginx/sites-available/app.conf

    - name: Remove default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Enable site
      file:
        src: /etc/nginx/sites-available/app.conf
        dest: /etc/nginx/sites-enabled/app.conf
        state: link
      notify: Restart Nginx
